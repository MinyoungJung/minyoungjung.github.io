<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Ringsterz Log</title>
 <link href="https://minyoungjung.github.io/atom.xml" rel="self"/>
 <link href="https://minyoungjung.github.io/"/>
 <updated>2017-06-15T23:40:43+09:00</updated>
 <id>https://minyoungjung.github.io/</id>
 <author>
   <name>Minyoung Jung</name>
   <email></email>
 </author>

 
 <entry>
   <title>Django를 이용한 건물주 평판 조회 서비스 제작 (3) - 구현 1일차</title>
   <link href="https://minyoungjung.github.io/"/>
   <updated>2017-06-15T00:00:00+09:00</updated>
   <id>https://minyoungjung.github.io//%ED%8C%8C%EC%9D%B4%EC%8D%AC/django/%EC%9B%B9%EC%84%9C%EB%B9%84%EC%8A%A4/%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C/2017/06/15/django-landlord-reputation-(3)</id>
   <content type="html">&lt;h1 id=&quot;구현-1일차&quot;&gt;구현 1일차&lt;/h1&gt;
&lt;h2 id=&quot;메인화면&quot;&gt;메인화면&lt;/h2&gt;
&lt;p&gt;부트스트랩을 이용해서 간단히 홈화면을 꾸미고, Navbar 및 footer를 생성.&lt;br /&gt;
중앙에는 평판을 검색할 수 있는 검색창을 추가했다.&lt;br /&gt;
검색창에서 주소를 검색하면, Naver Geocoder API를 이용해 주소를 위/경도로 변환해 주었다.&lt;/p&gt;

&lt;h2 id=&quot;검색-리스트&quot;&gt;검색 리스트&lt;/h2&gt;
&lt;p&gt;올바른 주소가 검색되었을때 이미 평판이 있으면 해당 평판을 볼수있는 링크를 보여주게 구현하였다.&lt;br /&gt;
DB내에 평판이 없을 경우 평판이 없음을 보여주고, 마찬가지로 링크를 선택하면 평판을 추가할수 있는 화면으로&lt;br /&gt;
이동하게 했다.&lt;/p&gt;

&lt;h2 id=&quot;평판-디테일-뷰&quot;&gt;평판 디테일 뷰&lt;/h2&gt;
&lt;p&gt;네이버 지도 API를 통해 검색한 주소의 마커를 보여주고, 평판을 추가할 수 있는 폼을 생성했다.&lt;br /&gt;
지도상에서 맵을 선택하면 해당 위치에 평판을 추가할 수 있도록 하고, 평판이 있다면 보여주도록 했다.&lt;/p&gt;

&lt;h1 id=&quot;고생한-점&quot;&gt;고생한 점&lt;/h1&gt;
&lt;p&gt;Naver Geocoder에서 주소를 찾지 못할때 &lt;code class=&quot;highlighter-rouge&quot;&gt;404 Not Found&lt;/code&gt;를 날려주는 것을 모르고 있다가 한참 헤맸다.&lt;br /&gt;
&lt;strong&gt;문서를 잘 읽자는 교훈&lt;/strong&gt; &lt;a href=&quot;https://developers.naver.com/docs/map/overview/&quot;&gt;네이버 지도 API 명세 - 5. 에러 코드 참조&lt;/a&gt;&lt;br /&gt;
또한 경도/위도의 자릿수를 8, 9자리에 6자리 소숫점 고정으로 생각하고 있다가,&lt;br /&gt;
경도/위도의 소숫점 아래 자리수가 7자리수인 좌표들이 등장하며 url 패턴에 맞지 않는 url들이 나와&lt;br /&gt;
계속 오류가 나는 것을 알아채지 못하고 한참 삽질을 했다.&lt;br /&gt;
굳이 Redirect가 필요하지 않은 것을 한단계 더 거쳐가는 형식으로 구현했다가 수정했다.&lt;br /&gt;
간단하다고 설계를 할때 깊게 생각하지 않으면 구현하면서 고생한다는 것을 다시금 깨달았다.&lt;/p&gt;

&lt;h1 id=&quot;진행률&quot;&gt;진행률&lt;/h1&gt;
&lt;p&gt;기본적인 기능 구현은 2/3 정도 끝난것 같다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;평판 등록/조회 기능&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;회원가입/로그인 기능&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;주소 검색 기능&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;80%&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;20%&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;100%&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;추후-일정&quot;&gt;추후 일정&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;로그인/회원가입 등 구현&lt;/li&gt;
  &lt;li&gt;가입한 사용자만 정보를 등록할 수 있도록 구현&lt;/li&gt;
  &lt;li&gt;디테일뷰에서 DB에 평판 추가하는 부분 구현&lt;/li&gt;
  &lt;li&gt;UI/UX 개선&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;일주일내로 기본 기능을 완성하기로 한 일정을 맞출 수 있을 것 같다.&lt;br /&gt;
여전히 개선할 부분과 디테일 개선은 갈길이 멀긴 하다.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Django를 이용한 건물주 평판 조회 서비스 제작 (2) - DB 구성, 외부 라이브러리</title>
   <link href="https://minyoungjung.github.io/"/>
   <updated>2017-06-14T00:00:00+09:00</updated>
   <id>https://minyoungjung.github.io//%ED%8C%8C%EC%9D%B4%EC%8D%AC/django/%EC%9B%B9%EC%84%9C%EB%B9%84%EC%8A%A4/%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C/2017/06/14/django-landlord-reputation-(2)</id>
   <content type="html">&lt;h1 id=&quot;db-구성&quot;&gt;DB 구성&lt;/h1&gt;
&lt;h2 id=&quot;reputation-테이블&quot;&gt;Reputation 테이블&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Longitude&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Latitude&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Description&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Created_date&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Primary Key&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;경도&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;위도&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;평판&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;레코드 생성 날짜&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;app-구성-및-외부-라이브러리&quot;&gt;App 구성 및 외부 라이브러리&lt;/h1&gt;
&lt;h2 id=&quot;app-구성&quot;&gt;App 구성&lt;/h2&gt;
&lt;p&gt;평판 조회/출력하는 단일 app으로 구성&lt;/p&gt;

&lt;h2 id=&quot;주소검색-라이브러리&quot;&gt;주소검색 라이브러리&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.juso.go.kr/addrlink/main.do&quot;&gt;주소검색솔루션&lt;/a&gt;&lt;br /&gt;
행정자치부에서 만든 솔루션이다.&lt;br /&gt;
자체적으로 서버에 솔루션을 설치해야 하기에 간단히 제작한다는 취지에 너무 과하다는 생각이 들어 패스했다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.naver.com/docs/map/javascriptv3/&quot;&gt;네이버맵스&lt;/a&gt;&lt;br /&gt;
간단하고 쓰기편한 네이버 지도 API 선택.&lt;/p&gt;

&lt;h2 id=&quot;프론트엔드-라이브러리&quot;&gt;프론트엔드 라이브러리&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://http://getbootstrap.com/&quot;&gt;부트스트랩&lt;/a&gt;&lt;br /&gt;
프론트엔드는 그냥 고민없이 부트스트랩으로…&lt;/p&gt;

&lt;h1 id=&quot;추후-일정&quot;&gt;추후 일정&lt;/h1&gt;
&lt;p&gt;Generic View, Admin 기능 등.. 최대한 장고 자체의 기능을 이용해서 빨리빨리 MVP 구현.&lt;br /&gt;
이후 저번 프로젝트와는 다른쪽에 중점을 두고 개선/확장 예정&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Pycharm Community 에디션에 Django 가상환경으로 세팅하기</title>
   <link href="https://minyoungjung.github.io/"/>
   <updated>2017-06-13T00:00:00+09:00</updated>
   <id>https://minyoungjung.github.io//%ED%8C%8C%EC%9D%B4%EC%8D%AC/django/%ED%99%98%EA%B2%BD%EC%84%A4%EC%A0%95/2017/06/13/django-pycharm-project-venv</id>
   <content type="html">&lt;h1 id=&quot;pycharm-community-에디션에-django-가상환경으로-세팅&quot;&gt;Pycharm Community 에디션에 Django 가상환경으로 세팅&lt;/h1&gt;
&lt;p&gt;Pycharm Professional Edition과 다르게 Community Edition은 Django와 같은 프로젝트를 직접 생성할 수 없다.&lt;br /&gt;
결국 설정을 위해서 약간의 번거로운 작업이 필요하다.&lt;/p&gt;

&lt;h2 id=&quot;가상환경-설정&quot;&gt;가상환경 설정&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;python -m venv my-virtualenv&lt;/code&gt;
my-virtualenv라는 이름의 가상환경 생성&lt;/p&gt;

&lt;h2 id=&quot;가상환경-실행&quot;&gt;가상환경 실행&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;source my-virtualenv/bin/activate&lt;/code&gt;&lt;br /&gt;
가상환경이 실행되면 &lt;code class=&quot;highlighter-rouge&quot;&gt;(my-virtualenv) 프롬프트 이름$&lt;/code&gt;와 같이 프롬프트가 변경된다.&lt;br /&gt;
이 상태에서는 어떤 폴더로 이동하든 가상환경이 실행된 상태이다.&lt;/p&gt;

&lt;h2 id=&quot;django-설치&quot;&gt;Django 설치&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pip3 install django&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;django-project-생성&quot;&gt;Django project 생성&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;django-admin startproject 프로젝트이름&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;git-설정&quot;&gt;Git 설정&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git init&lt;/code&gt; &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;git add .&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit -m &quot;first commit&quot;&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;git remote add origin https://github.com/프로젝트github.git&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin master&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;pycharm-설정&quot;&gt;Pycharm 설정&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Pycharm 커뮤니티 에디션 실행, 프로젝트 폴더 위치 선택하여 프로젝트 열기&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;⌘&lt;/code&gt;+&lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt; 입력하여 Preference 창 출력&lt;/li&gt;
  &lt;li&gt;Project -&amp;gt; Project Interpreter 선택&lt;/li&gt;
  &lt;li&gt;맨 위의 Prject Interpreter 선택 창 옆의 설정 아이콘 선택 -&amp;gt; Add local&lt;/li&gt;
  &lt;li&gt;생성한 가상환경 폴더의 /bin/python3 선택 -&amp;gt; Apply&lt;/li&gt;
  &lt;li&gt;Run -&amp;gt; Edit configurations 선택&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; 선택 후 Python 선택하여 새로운 환경 설정 생성 후 이름 지정&lt;/li&gt;
  &lt;li&gt;Script: 프로젝트 폴더의 manage.py 선택, Script parameters: runserver&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;pycharm에서-가상환경으로-작업&quot;&gt;Pycharm에서 가상환경으로 작업&lt;/h2&gt;
&lt;p&gt;이제 커맨드라인에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;deactivate&lt;/code&gt;를 입력해 가상환경을 종료해도 Pycharm안에서 모두 해결 가능하다.&lt;br /&gt;
패키지를 인스톨하고 싶다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;⌘&lt;/code&gt;+&lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt; 입력 후 Project Interpreter 항목의 리스트에서 선택하면 되고,&lt;br /&gt;
테스트 서버를 실행하고 싶다면 간단히 &lt;code class=&quot;highlighter-rouge&quot;&gt;⌃&lt;/code&gt;+&lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt;이나 재생버튼(?)을 선택하여 실행할 수 있다.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Django를 이용한 건물주 평판 조회 서비스 제작 (1) - 기획</title>
   <link href="https://minyoungjung.github.io/"/>
   <updated>2017-06-12T00:00:00+09:00</updated>
   <id>https://minyoungjung.github.io//%ED%8C%8C%EC%9D%B4%EC%8D%AC/django/%EC%9B%B9%EC%84%9C%EB%B9%84%EC%8A%A4/%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C/2017/06/12/django-landlord-reputation-(1)</id>
   <content type="html">&lt;h1 id=&quot;발단&quot;&gt;발단&lt;/h1&gt;

&lt;p&gt;1일 1커밋/포스팅의 압박에 무엇이라도 만들어내야 한다는 부담이 들기 시작했다.&lt;br /&gt;
누구에게 보여주고자 한 것도 아니고 스스로 한 약속이지만 부담이 있는 것은 사실이다.&lt;br /&gt;
다행히 아직까지는 그러한 부담이 긍정적으로 작용하는 것 같다.&lt;br /&gt;
&lt;br /&gt;
지난 프로젝트 이후 느낀 점이지만 프로젝트가 커지는 경우 디버깅과 완성도의 압박에 프로젝트의 흥미를 잃게 된다.&lt;br /&gt;
그런 것을 방지하고자 최대한 간단한 기능과 구조로 출발하기로 했다.&lt;br /&gt;
사실 그런것보다 “다작”하기로 결심한 이후 무엇을 만들 것인가를 결정하는 것이 더 어려운 편이다.&lt;br /&gt;
다행히 이번에는 아이디어를 제공하는 사건이 있어 그것을 토대로 서비스를 만들기로 했다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;지인이 사무실을 이전하는데 이전 사무실 건물주가 에어컨을 떼는 날 잠적하거나,&lt;br /&gt;
이런저런 일로 꼬투리를 잡아가며 한푼이라도 더 뜯어가려는(?) 행태를 보였다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이에 대해 이야기하다 기존 집주인/건물주의 평판을 조회할 수 있는 서비스를 제작해 보기로 했다.&lt;/p&gt;

&lt;h1 id=&quot;요구사항&quot;&gt;요구사항&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Google/Naver등 Map 서비스를 바탕으로 특정 위치의 건물주의 평판을 등록/조회할 수 있게 한다.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;간단한 토론이 일어날 수 있도록 등록된 평판에 댓글 기능을 지원한다.&lt;/del&gt; 그냥 평판이 여러개 등록되면 될듯 하다.&lt;/li&gt;
  &lt;li&gt;회원가입 시 간단한 인증 절차를 통해 인증되지 않은 회원은 평판&lt;del&gt;/댓글&lt;/del&gt;을 등록할 수 없게 한다.&lt;/li&gt;
  &lt;li&gt;주소/위치 검색등을 통해 해당 위치의 평판을 보여주는 기능을 갖춘다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;목표&quot;&gt;목표&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;간결한 UI/UX&lt;/li&gt;
  &lt;li&gt;테스트 코드 삽입&lt;/li&gt;
  &lt;li&gt;Heroku등 무료 서비스를 이용한 퍼블리싱&lt;/li&gt;
  &lt;li&gt;REST API를 제작하여 App으로 연동 (옵션)&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;추가-목표&quot;&gt;추가 목표&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;안드로이드 App 연동&lt;/li&gt;
  &lt;li&gt;1주일 내 MVP 완성 (~6/18일)&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Phaser를 이용한 간단 인터랙션 제작</title>
   <link href="https://minyoungjung.github.io/"/>
   <updated>2017-06-11T00:00:00+09:00</updated>
   <id>https://minyoungjung.github.io//javascript/2017/06/11/phaser-interaction</id>
   <content type="html">&lt;h1 id=&quot;phaser란&quot;&gt;Phaser란&lt;/h1&gt;
&lt;p&gt;HTML5의 Canvas및 WebGL을 이용해 Web game을 제작할 수 있게 해주는 Javascript 라이브러리&lt;br /&gt;
Phaser를 테스트 하기 위해서는 로컬 웹서버를 실행해야 한다.&lt;br /&gt;
Python이 깔려있다면 Python의 기본 웹서버를 이용하면 간단하다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;python -m SimpleHTTPServer&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;구조&quot;&gt;구조&lt;/h1&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;game&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Phaser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Phaser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AUTO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;preload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;위의 전역 변수 정의를 통해 width * height 크기의 게임창을 생성한다.&lt;br /&gt;
크게 preload, create, update의 세 메소드로 나뉘어져 있다.&lt;/p&gt;

&lt;h2 id=&quot;preload&quot;&gt;Preload&lt;/h2&gt;
&lt;p&gt;게임 실행전에 실행되는 메소드로 주로 이미지나 기타 자료의 로딩에 쓰인다.&lt;/p&gt;

&lt;h2 id=&quot;create&quot;&gt;Create&lt;/h2&gt;
&lt;p&gt;게임이 실제적으로 생성될때 실행되는 메소드로 로딩된 이미지를 출력하거나 리스너를 할당하거나 등의 작업을 한다.&lt;/p&gt;

&lt;h2 id=&quot;update&quot;&gt;Update&lt;/h2&gt;
&lt;p&gt;주기적으로 실행되는 메소드로 주로 키 이벤트를 할당하거나 게임의 개체들을 업데이트 하는 등의 작업을 한다.&lt;/p&gt;

&lt;h1 id=&quot;간단한-결과물&quot;&gt;간단한 결과물&lt;/h1&gt;
&lt;p&gt;사용자의 마우스 이벤트에 반응해서 이미지의 알파값을 변경시켜 출력 시켜주는 애니메이션 예제&lt;br /&gt;
&lt;a href=&quot;http://minimi.surge.sh/&quot;&gt;Phaser로 제작한 간단한 결과물&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;추후-계획&quot;&gt;추후 계획&lt;/h1&gt;
&lt;p&gt;주 1회 협업, 매번 간단한 인터렉션 제작 (장기적으로는 게임이 될 수도…)&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Django 프로젝트 Heroku에 릴리즈하기</title>
   <link href="https://minyoungjung.github.io/"/>
   <updated>2017-06-10T00:00:00+09:00</updated>
   <id>https://minyoungjung.github.io//%ED%8C%8C%EC%9D%B4%EC%8D%AC/django/%EC%9B%B9%EC%84%9C%EB%B9%84%EC%8A%A4/2017/06/10/django-project-heroku</id>
   <content type="html">&lt;h1 id=&quot;기존-django-프로젝트-heroku에-릴리즈&quot;&gt;기존 Django 프로젝트 Heroku에 릴리즈&lt;/h1&gt;

&lt;h2 id=&quot;heroku-cli-설치&quot;&gt;Heroku CLI 설치&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;brew install heroku&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;gunicorn을-추가&quot;&gt;gunicorn을 추가&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pip3 install gunicorn&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;gunicorn 설정시 폴더구조는&lt;br /&gt;
메인 -&lt;br /&gt;
       |- 프로젝트&lt;br /&gt;
       |- 다른 앱&lt;br /&gt;
폴더 구조가 다르면 gunicorn module 임포트를 적절히 수정해 줘야 한다.&lt;/p&gt;

&lt;h2 id=&quot;procfile-추가&quot;&gt;Procfile 추가&lt;/h2&gt;
&lt;p&gt;프로젝트 루트에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Procfile&lt;/code&gt;을 추가하고 다음 내용을 저장한다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;web: gunicorn myproject.wsgi --log-file -&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;runtimetxt-추가&quot;&gt;runtime.txt 추가&lt;/h2&gt;
&lt;p&gt;프로젝트 루트에 &lt;code class=&quot;highlighter-rouge&quot;&gt;runtime.txt&lt;/code&gt;을 추가하고 다음 내용을 저장한다. (파이썬 3.# 일 경우)&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;python-3.6.1&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;dj-database-url-추가&quot;&gt;dj-database-url 추가&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pip3 install dj-database-url&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;이후 프로젝트의 &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.py&lt;/code&gt;파일에&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;dj_database_url&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;db_from_env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dj_database_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn_max_age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DATABASES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'default'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db_from_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;를 추가한다.&lt;/p&gt;

&lt;h2 id=&quot;whitenoise-추가&quot;&gt;whitenoise 추가&lt;/h2&gt;
&lt;p&gt;장고는 기본적으로 프로덕션에서 스태틱 파일을 제공하지 않는다.&lt;br /&gt;
whitenoise는 개발 환경 그대로 스태틱 파일을 제공하게 해준다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;pip install whitenoise&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;settings.py&lt;/code&gt;에 다음 내용을 추가한다.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Simplified static file serving.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# https://warehouse.python.org/project/whitenoise/&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;STATIC_ROOT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BASE_DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'staticfiles'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;STATICFILES_STORAGE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'whitenoise.django.GzipManifestStaticFilesStorage'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;wsgi.py&lt;/code&gt;에 다음 내용을 추가한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;from django.core.wsgi import get_wsgi_application
from whitenoise.django import DjangoWhiteNoise

application = get_wsgi_application()
application = DjangoWhiteNoise(application)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heroku에-로그인&quot;&gt;Heroku에 로그인&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;heroku login&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;heroku-앱-생성&quot;&gt;Heroku 앱 생성&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;heroku create&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku create
Creating app... done, ⬢ calm-basin-17299
https://calm-basin-17299.herokuapp.com/ | https://git.heroku.com/calm-basin-17299.git

Git remote heroku added
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;heroku를-git-remote로-추가&quot;&gt;Heroku를 git remote로 추가&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git remote add heroku https://git.heroku.com/calm-basin-17299.git&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;db가-생성되어-있지-않다면-생성&quot;&gt;db가 생성되어 있지 않다면 생성&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;heroku run python manage.py migrate&lt;/code&gt;&lt;br /&gt;
간혹 dev와 production 환경의 db가 다를 경우 db 생성이 되지 않은 상태라 push가 제대로 되지 않는다.&lt;/p&gt;

&lt;h1 id=&quot;슈퍼유저-생성&quot;&gt;슈퍼유저 생성&lt;/h1&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;heroku run python manage.py createsuperuser&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;commit하고-heroku에-push&quot;&gt;commit하고 Heroku에 push&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push heroku master&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;만약-matpolib을-쓴다면-헤로쿠와-충돌이-일어난다&quot;&gt;만약 matpolib을 쓴다면… 헤로쿠와 충돌이 일어난다&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import matplotlib
matplotlib.use('Agg')
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;import matplotlib.pyplot as plt, mpld3&lt;/code&gt; 전에 추가한다.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Django를 이용한 스케쥴러 제작 (2) - 구현</title>
   <link href="https://minyoungjung.github.io/"/>
   <updated>2017-06-09T00:00:00+09:00</updated>
   <id>https://minyoungjung.github.io//%ED%8C%8C%EC%9D%B4%EC%8D%AC/django/%EC%9B%B9%EC%84%9C%EB%B9%84%EC%8A%A4/2017/06/09/django-scheduler-(2)</id>
   <content type="html">&lt;h1 id=&quot;구현&quot;&gt;구현&lt;/h1&gt;
&lt;h2 id=&quot;todolist&quot;&gt;Todolist&lt;/h2&gt;
&lt;p&gt;Django의 Generic view를 이용해 구현했다.&lt;br /&gt;
TodayArchiveView/DayArchiveView를 이용해 해당 날짜의 할일들을 보여주었다.&lt;/p&gt;

&lt;h2 id=&quot;calendar&quot;&gt;Calendar&lt;/h2&gt;
&lt;p&gt;Python standard library의 HTMLCalendar를 이용해 구현했다.&lt;br /&gt;
지난달/다음달로 이동할 수 있는 화살표를 추가하고, Workout 테이블을 조회하여 리스트를 해당 날짜에 뿌려주었다.&lt;/p&gt;

&lt;h2 id=&quot;stats&quot;&gt;Stats&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;id&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;create_date&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;workout_done&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;owner_id&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;workout_id&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;duration&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;workout_date&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PK&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;생성일&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;운동 수행여부&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;소유자&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;FK(List)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;수행시간(분)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;수행 날짜&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Workout 테이블에서 owner를 필터로 쿼리셋을 뽑아낸 후, duration의 평균을 구해 matplotlib으로 출력하였다.&lt;br /&gt;
별도의 DB 테이블에 각각의 평균값을 운동 수행 결과 표시 시마다 계산하여 저장하고,&lt;br /&gt;
해당 테이블을 조회하는 것이 훨씬 빠르겠지만, 일단은 나 혼자 쓰는 서비스니까 그냥 전체 DB를 검색하기로 결정.&lt;br /&gt;
Django 철학에도 있지않은가.. &lt;code class=&quot;highlighter-rouge&quot;&gt;Simple is better than complex&lt;/code&gt; &lt;del&gt;이럴때 쓰란말은 아니지만…&lt;/del&gt;
&lt;br /&gt;
여러 종류의 그래프를 통해 다양한 그래프를 출력하고 싶었지만, 막상 데이터가 여러 방법으로 보여줄 것이 없었다.&lt;br /&gt;
워낙 DB 구성이 단순하니까… 나중에 더 생각나면 추가하기로 했다.&lt;/p&gt;

&lt;h2 id=&quot;로그인관리자-기능&quot;&gt;로그인/관리자 기능&lt;/h2&gt;
&lt;p&gt;Django의 기본 Auth와 Admin을 이용했다.&lt;br /&gt;
혼자 쓰는 서비스이지만 결국 웹에 올려놓을 테니.. 로그인 기능이 필요하긴 했다.&lt;/p&gt;

&lt;h1 id=&quot;스크린샷&quot;&gt;스크린샷&lt;/h1&gt;
&lt;h2 id=&quot;todolist-1&quot;&gt;Todolist&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/post_assets/2017-06-09/todolist.png&quot; alt=&quot;할일목록&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;calendar-1&quot;&gt;Calendar&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/post_assets/2017-06-09/calendar.png&quot; alt=&quot;캘린더&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;stats-1&quot;&gt;Stats&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/post_assets/2017-06-09/stats.png&quot; alt=&quot;그래프&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;모바일-대응-메뉴&quot;&gt;모바일 대응 메뉴&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/post_assets/2017-06-09/mobile-react.png&quot; alt=&quot;모바일 대응&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;마무리&quot;&gt;마무리&lt;/h1&gt;
&lt;p&gt;간단히 시작한 프로젝트였지만, 막상 너무 간단한게 아닌가하는 생각이 들어 무엇인가를 추가하려 했다.&lt;br /&gt;
하지만 기능은 추가하고 싶고 마땅히 추가할 기능은 없고… 점점 본질에서 멀어져가며 흥미가 떨어지는 것을 느끼고,&lt;br /&gt;
이러다가는 프로젝트를 완성하지도 못할 것 같아 다시 초심으로 돌아가 간단히 마무리했다.&lt;br /&gt;
일단은 이것으로 프로젝트 구현을 마치고, 스스로 사용해보고 마음에 들면 개선하고 추가해 볼 생각이다.&lt;/p&gt;

&lt;h1 id=&quot;추후-계획&quot;&gt;추후 계획&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;각종 버그 수정… (귀찮지 않다면…)&lt;/li&gt;
  &lt;li&gt;데이터 분석 및 그래프 기능 확장&lt;/li&gt;
  &lt;li&gt;데이터 입력 기능 편하게 만들기 (현재는 혼자 쓰니 그냥 어드민으로 넣음..)&lt;/li&gt;
  &lt;li&gt;간단한 소셜 기능 (옵션)&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;서비스-링크&quot;&gt;서비스 링크&lt;/h1&gt;
&lt;p&gt;간단히 무료 Dyno를 통해 Heroku에 올려두었다.&lt;br /&gt;
DB row도 10000줄까지 밖에 지원하지 않지만 혼자쓰니 문제없겠지..&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://workoutcal.herokuapp.com&quot;&gt;https://workoutcal.herokuapp.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Django를 이용한 스케쥴러 제작 (1) - 정의 및 구성</title>
   <link href="https://minyoungjung.github.io/"/>
   <updated>2017-06-08T00:00:00+09:00</updated>
   <id>https://minyoungjung.github.io//%ED%8C%8C%EC%9D%B4%EC%8D%AC/django/%EC%9B%B9%EC%84%9C%EB%B9%84%EC%8A%A4/2017/06/08/django-scheduler-(1)</id>
   <content type="html">&lt;h1 id=&quot;발단&quot;&gt;발단&lt;/h1&gt;
&lt;p&gt;1일 1커밋을 생활화하기 위해 Django를 이용한 간단한 서비스를 만들기로 했다.&lt;br /&gt;
운동을 좋아하는 만큼 운동 스케쥴러를 작성하기로 했고, 프로젝트 목표와 개발 방향을 설정했다.&lt;/p&gt;

&lt;h1 id=&quot;목표&quot;&gt;목표&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;스스로 사용할 만한 서비스 구축&lt;/li&gt;
  &lt;li&gt;깔끔한 디자인&lt;/li&gt;
  &lt;li&gt;확장성(?)&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;요구사항&quot;&gt;요구사항&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;일정을 추가할 수 있고, 일별/월별 보기가 가능할 것&lt;/li&gt;
  &lt;li&gt;당일 해야할 운동 종류를 표시하며, 해당 Todo 리스트에서 수행 여부를 표시할 수 있을 것&lt;/li&gt;
  &lt;li&gt;수행한 항목의 수행 시간에 비율을 그래프로 출력할 것&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;db-구성&quot;&gt;DB 구성&lt;/h1&gt;
&lt;p&gt;크게 운동 종류를 나타낸 Category 테이블을 만들고, 카테고리 테이블을 Foreign key로 이용한 List 테이블,&lt;br /&gt;
마지막으로 각각의 개별 운동을 나타내는 Workout 테이블을 생성했다.&lt;br /&gt;
테이블 상세 구성은 아래와 같다.&lt;/p&gt;

&lt;h2 id=&quot;workout-list-테이블&quot;&gt;Workout List 테이블&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;id&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;workout_title&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;category_id&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PK&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;개별 운동 이름&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;FK(Category)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;workout-category-테이블&quot;&gt;Workout Category 테이블&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;id&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;category_name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PK&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;운동 카테고리 이름&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;workout-테이블&quot;&gt;Workout 테이블&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;id&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;create_date&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;workout_done&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;owner_id&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;workout_id&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;duration&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;workout_date&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PK&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;생성일&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;운동 수행여부&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;소유자&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;FK(List)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;수행시간(분)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;수행 날짜&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;app-구성-및-외부-라이브러리&quot;&gt;App 구성 및 외부 라이브러리&lt;/h1&gt;
&lt;p&gt;App은 할일을 출력하는 todolist, 월별 목록을 출력하는 calendar,&lt;br /&gt;
그래프를 출력하는 stats의 세 부분으로 구성되어 있다.&lt;/p&gt;

&lt;p&gt;전체적인 Look&amp;amp;Feel은 심플한 Material Design 형태로 가기로 하고, &lt;a href=&quot;http://materializecss.com/getting-started.html&quot;&gt;Materialize&lt;/a&gt;를 이용했다.&lt;br /&gt;
그래프를 출력하기 위해서는 &lt;a href=&quot;https://github.com/plotly/plotly.py&quot;&gt;Plotly&lt;/a&gt;와 &lt;a href=&quot;https://matplotlib.org/gallery.html&quot;&gt;Matplotlib&lt;/a&gt;을 고민하다 최종적으로 matplotlib으로 결정하였다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://minyoungjung.github.io/파이썬/django/웹서비스/2017/06/09/django-scheduler-(2)/&quot;&gt;Django를 이용한 스케쥴러 제작 (2) - 구현&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Python 가상환경 옮기기</title>
   <link href="https://minyoungjung.github.io/"/>
   <updated>2017-06-07T00:00:00+09:00</updated>
   <id>https://minyoungjung.github.io//%ED%8C%8C%EC%9D%B4%EC%8D%AC/%ED%99%98%EA%B2%BD%EC%84%A4%EC%A0%95/2017/06/07/python-venv-export</id>
   <content type="html">&lt;h1 id=&quot;발단&quot;&gt;발단&lt;/h1&gt;
&lt;p&gt;가상환경을 이용한 로컬 프로젝트에서 matplotlib을 임포트 하려니 임포트 에러가 발생했다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(tensorflow_venv) My-MacBook-Pro:tensorflow_demo mymacpro$ python3 linearregression.py 
Traceback (most recent call last):
File &quot;linearregression.py&quot;, line 14, in &amp;lt;module&amp;gt;
import matplotlib.pyplot as plt
File &quot;/Users/mymacpro/Documents/Python_workspace/tensorflow_demo/tensorflow_venv/lib/python3.6/site-packages/matplotlib/pyplot.py&quot;, line 115, in &amp;lt;module&amp;gt;
_backend_mod, new_figure_manager, draw_if_interactive, _show = pylab_setup()
File &quot;/Users/mymacpro/Documents/Python_workspace/tensorflow_demo/tensorflow_venv/lib/python3.6/site-packages/matplotlib/backends/__init__.py&quot;, line 32, in pylab_setup
globals(),locals(),[backend_name],0)
File &quot;/Users/mymacpro/Documents/Python_workspace/tensorflow_demo/tensorflow_venv/lib/python3.6/site-packages/matplotlib/backends/backend_macosx.py&quot;, line 19, in &amp;lt;module&amp;gt;
from matplotlib.backends import _macosx
RuntimeError: Python is not installed as a framework. The Mac OS X backend will not be able to function correctly if Python is not installed as a framework. See the Python documentation for more information on installing Python as a framework on Mac OS X. Please either reinstall Python as a framework, or try one of the other backends. If you are using (Ana)Conda please install python.app and replace the use of 'python' with 'pythonw'. See 'Working with Matplotlib on OSX' in the Matplotlib FAQ for more information.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;라이브러리의 FAQ를 보니 virtualenv 대신에 venv를 이용하여 가상환경을 이용하란다.&lt;/p&gt;

&lt;h1 id=&quot;해결-방법&quot;&gt;해결 방법&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pip3 freeze &amp;gt; requirements.txt&lt;/code&gt;로 기존 가상환경의 패키지 리스트를 추출한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;python3 -m venv myvenv&lt;/code&gt;로 myenv라는 새로운 가상환경을 만든다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;source myvenv/bin/activate&lt;/code&gt;로 myenv 가상환경을 실행한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pip3 install -r requirements.txt&lt;/code&gt;를 통해 전에 있던 가상환경에서 추출한 패키지 리스트를 다시 설치한다.&lt;/li&gt;
  &lt;li&gt;필요하다면 (기존 가상환경을 삭제한다.)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;결과&quot;&gt;결과&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/post_assets/2017-06-07/matplotlib_plot.png&quot; alt=&quot;그래프&quot; /&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Git Merge 충돌 해결 원인 파악하기</title>
   <link href="https://minyoungjung.github.io/"/>
   <updated>2017-06-06T00:00:00+09:00</updated>
   <id>https://minyoungjung.github.io//git/2017/06/06/git-conflic-solving</id>
   <content type="html">&lt;h1 id=&quot;발단&quot;&gt;발단&lt;/h1&gt;

&lt;p&gt;로컬의 프로젝트를 Github로 푸쉬하려는데 문제가 발생했다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(workoutscheduler) My-MacBook-Pro:workoutscheduler mymacpro$ git push origin master
To https://github.com/MinyoungJung/workoutscheduler_project.git
! [rejected]        master -&amp;gt; master (non-fast-forward)
error: failed to push some refs to 'https://github.com/MinyoungJung/workoutscheduler_project.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Integrate the remote changes (e.g.
hint: 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;메시지를 보니 Github 브랜치 내용이 로컬의 브랜치 내용보다 최신이란다.&lt;/p&gt;

&lt;h1 id=&quot;해결-방안&quot;&gt;해결 방안&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push -f&lt;/code&gt;를 통해 강제로 푸쉬한다.&lt;br /&gt;
사실 혼자 로컬에서 작업하는 프로젝트다보니 Github 내용이 더 최신이 된 것 자체가 이상한 상황이고,&lt;br /&gt;
로컬의 코드를 그냥 푸쉬해서 덮어씌워도 아무 문제 없으나 아무래도 찜찜한 것이 사실.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gitk HEAD @{u}&lt;/code&gt; 명령어로 upstream branch와 현재 헤드의 차이를 확인한다.
&lt;img src=&quot;/post_assets/2017-06-06/conflict.png&quot; alt=&quot;머지 충돌&quot; /&gt;
master와 origin 사이의 충돌이 생긴 이유가 명확해졌다.&lt;br /&gt;
project setting에서 github page를 생성했더니, 그에 대한 파일이 변경된 것이 로컬에서는 반영되지 않은 것.&lt;br /&gt;
원인을 파악했으니 편안한 맘으로 강제로 푸쉬할 수 있게 되었다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>파이썬 오브젝트 소스코드 간단히 보기 및 스탠다드 라이브러리 메소드 오버라이딩</title>
   <link href="https://minyoungjung.github.io/"/>
   <updated>2017-06-05T00:00:00+09:00</updated>
   <id>https://minyoungjung.github.io//%ED%8C%8C%EC%9D%B4%EC%8D%AC/2017/06/05/overriding-python-standard-library</id>
   <content type="html">&lt;h1 id=&quot;파이썬-오브젝트-소스-코드-보기&quot;&gt;파이썬 오브젝트 소스 코드 보기&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;inspect&lt;/code&gt; 모듈 임포트
&lt;code class=&quot;highlighter-rouge&quot;&gt;import inspect&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;살펴볼 오브젝트 임포트
&lt;code class=&quot;highlighter-rouge&quot;&gt;from calendar import HTMLCalendar&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;소스코드를 보기좋은 형태로 출력
&lt;code class=&quot;highlighter-rouge&quot;&gt;print(inspect.getsource(HTMLCalendar))&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;스탠다드-라이브러리-메소드-오버라이딩&quot;&gt;스탠다드 라이브러리 메소드 오버라이딩&lt;/h1&gt;
&lt;p&gt;HTMLCalendar는 베이스 클래스인 Calendar를 상속받아 HTML 달력을 만들어주는 역할을 하는 클래스이다.&lt;br /&gt;
0(월요일:디폴트)에서 6(일요일)까지 달력의 시작을 정의하는 하나의 firstweekday인자를 전달받는다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;print(calendar.HTMLCalendar(6).formatmonth(2017,6))&lt;/code&gt;과 같이 입력하면 아래의 달력이 출력된다.&lt;/p&gt;

&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;month&quot;&gt;
&lt;tr&gt;&lt;th colspan=&quot;7&quot; class=&quot;month&quot;&gt;June 2017&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th class=&quot;sun&quot;&gt;Sun&lt;/th&gt;&lt;th class=&quot;mon&quot;&gt;Mon&lt;/th&gt;&lt;th class=&quot;tue&quot;&gt;Tue&lt;/th&gt;&lt;th class=&quot;wed&quot;&gt;Wed&lt;/th&gt;&lt;th class=&quot;thu&quot;&gt;Thu&lt;/th&gt;&lt;th class=&quot;fri&quot;&gt;Fri&lt;/th&gt;&lt;th class=&quot;sat&quot;&gt;Sat&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;noday&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td class=&quot;noday&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td class=&quot;noday&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td class=&quot;noday&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td class=&quot;thu&quot;&gt;1&lt;/td&gt;&lt;td class=&quot;fri&quot;&gt;2&lt;/td&gt;&lt;td class=&quot;sat&quot;&gt;3&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;sun&quot;&gt;4&lt;/td&gt;&lt;td class=&quot;mon&quot;&gt;5&lt;/td&gt;&lt;td class=&quot;tue&quot;&gt;6&lt;/td&gt;&lt;td class=&quot;wed&quot;&gt;7&lt;/td&gt;&lt;td class=&quot;thu&quot;&gt;8&lt;/td&gt;&lt;td class=&quot;fri&quot;&gt;9&lt;/td&gt;&lt;td class=&quot;sat&quot;&gt;10&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;sun&quot;&gt;11&lt;/td&gt;&lt;td class=&quot;mon&quot;&gt;12&lt;/td&gt;&lt;td class=&quot;tue&quot;&gt;13&lt;/td&gt;&lt;td class=&quot;wed&quot;&gt;14&lt;/td&gt;&lt;td class=&quot;thu&quot;&gt;15&lt;/td&gt;&lt;td class=&quot;fri&quot;&gt;16&lt;/td&gt;&lt;td class=&quot;sat&quot;&gt;17&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;sun&quot;&gt;18&lt;/td&gt;&lt;td class=&quot;mon&quot;&gt;19&lt;/td&gt;&lt;td class=&quot;tue&quot;&gt;20&lt;/td&gt;&lt;td class=&quot;wed&quot;&gt;21&lt;/td&gt;&lt;td class=&quot;thu&quot;&gt;22&lt;/td&gt;&lt;td class=&quot;fri&quot;&gt;23&lt;/td&gt;&lt;td class=&quot;sat&quot;&gt;24&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;sun&quot;&gt;25&lt;/td&gt;&lt;td class=&quot;mon&quot;&gt;26&lt;/td&gt;&lt;td class=&quot;tue&quot;&gt;27&lt;/td&gt;&lt;td class=&quot;wed&quot;&gt;28&lt;/td&gt;&lt;td class=&quot;thu&quot;&gt;29&lt;/td&gt;&lt;td class=&quot;fri&quot;&gt;30&lt;/td&gt;&lt;td class=&quot;noday&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;오브젝트 소스코드를 살펴보고 HTML Calendar의 첫번째 row에 좌/우 이동 화살표(&amp;lt;,&amp;gt;)를 출력해보자.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;파이썬 라이브러리 코드&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;formatmonthname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theyear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;themonth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;withyear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    Return a month name as a table row.
    &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;withyear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;themonth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theyear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;themonth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;tr&amp;gt;&amp;lt;th colspan=&quot;7&quot; class=&quot;month&quot;&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s&amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;주석을 보면 달 이름을 테이블 행 형태로 돌려주는 메소드이고, 리턴값은 HTML의 형태인 것을 알 수 있다.&lt;br /&gt;
해당 메소드를 바로 오버라이딩 하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;month_name[themonth]&lt;/code&gt; 구문에서 오류가 뜨는데,&lt;br /&gt;
month_name은 calendar 모듈의 Data 속성이므로 &lt;code class=&quot;highlighter-rouge&quot;&gt;from calendar import month_name&lt;/code&gt;를 해야한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;오버라이딩한 메소드&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;calendar&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HTMLCalendar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month_name&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ArrowCalendar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HTMLCalendar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstweekday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;HTMLCalendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstweekday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;formatmonthname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;withyear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;withyear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;tr&amp;gt;&amp;lt;th colspan=&quot;1&quot; class=&quot;month_arrow&quot;&amp;gt; &amp;lt; &amp;lt;/th&amp;gt;'&lt;/span&gt; \
            &lt;span class=&quot;s&quot;&gt;'&amp;lt;th colspan=&quot;5&quot; class=&quot;month&quot;&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s&amp;lt;/th&amp;gt;'&lt;/span&gt; \
            &lt;span class=&quot;s&quot;&gt;'&amp;lt;th colspan=&quot;1&quot; class=&quot;month_arrow&quot;&amp;gt; &amp;gt; &amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;7칸짜리 테이블로 달 이름을 넘겨주는 것을 5칸으로 줄이고 양쪽에 한칸씩 좌/우 화살표를 넣었다.&lt;br /&gt;
이후 css 클래스를 적용해서 화살표를 정렬하면 완성&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.month_arrow&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;완성된-달력&quot;&gt;완성된 달력&lt;/h2&gt;
&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;month&quot;&gt;
&lt;tr&gt;&lt;th colspan=&quot;1&quot; class=&quot;month_arrow&quot;&gt; &amp;lt; &lt;/th&gt;&lt;th colspan=&quot;5&quot; class=&quot;month&quot;&gt;June 2017&lt;/th&gt;&lt;th colspan=&quot;1&quot; class=&quot;month_arrow&quot;&gt; &amp;gt; &lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th class=&quot;sun&quot;&gt;Sun&lt;/th&gt;&lt;th class=&quot;mon&quot;&gt;Mon&lt;/th&gt;&lt;th class=&quot;tue&quot;&gt;Tue&lt;/th&gt;&lt;th class=&quot;wed&quot;&gt;Wed&lt;/th&gt;&lt;th class=&quot;thu&quot;&gt;Thu&lt;/th&gt;&lt;th class=&quot;fri&quot;&gt;Fri&lt;/th&gt;&lt;th class=&quot;sat&quot;&gt;Sat&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;noday&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td class=&quot;noday&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td class=&quot;noday&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td class=&quot;noday&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;td class=&quot;thu&quot;&gt;1&lt;/td&gt;&lt;td class=&quot;fri&quot;&gt;2&lt;/td&gt;&lt;td class=&quot;sat&quot;&gt;3&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;sun&quot;&gt;4&lt;/td&gt;&lt;td class=&quot;mon&quot;&gt;5&lt;/td&gt;&lt;td class=&quot;tue&quot;&gt;6&lt;/td&gt;&lt;td class=&quot;wed&quot;&gt;7&lt;/td&gt;&lt;td class=&quot;thu&quot;&gt;8&lt;/td&gt;&lt;td class=&quot;fri&quot;&gt;9&lt;/td&gt;&lt;td class=&quot;sat&quot;&gt;10&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;sun&quot;&gt;11&lt;/td&gt;&lt;td class=&quot;mon&quot;&gt;12&lt;/td&gt;&lt;td class=&quot;tue&quot;&gt;13&lt;/td&gt;&lt;td class=&quot;wed&quot;&gt;14&lt;/td&gt;&lt;td class=&quot;thu&quot;&gt;15&lt;/td&gt;&lt;td class=&quot;fri&quot;&gt;16&lt;/td&gt;&lt;td class=&quot;sat&quot;&gt;17&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;sun&quot;&gt;18&lt;/td&gt;&lt;td class=&quot;mon&quot;&gt;19&lt;/td&gt;&lt;td class=&quot;tue&quot;&gt;20&lt;/td&gt;&lt;td class=&quot;wed&quot;&gt;21&lt;/td&gt;&lt;td class=&quot;thu&quot;&gt;22&lt;/td&gt;&lt;td class=&quot;fri&quot;&gt;23&lt;/td&gt;&lt;td class=&quot;sat&quot;&gt;24&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&quot;sun&quot;&gt;25&lt;/td&gt;&lt;td class=&quot;mon&quot;&gt;26&lt;/td&gt;&lt;td class=&quot;tue&quot;&gt;27&lt;/td&gt;&lt;td class=&quot;wed&quot;&gt;28&lt;/td&gt;&lt;td class=&quot;thu&quot;&gt;29&lt;/td&gt;&lt;td class=&quot;fri&quot;&gt;30&lt;/td&gt;&lt;td class=&quot;noday&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

</content>
 </entry>
 
 <entry>
   <title>Google의 머신러닝 라이브러리, 텐서플로 알아보기 - 환경설정 및 설치</title>
   <link href="https://minyoungjung.github.io/"/>
   <updated>2017-06-04T00:00:00+09:00</updated>
   <id>https://minyoungjung.github.io//%ED%99%98%EA%B2%BD%EC%84%A4%EC%A0%95/%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D/2017/06/04/tensorflow-demo</id>
   <content type="html">&lt;h1 id=&quot;설치&quot;&gt;설치&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;파이썬3 가상환경 생성&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;$ virtualenv --system-site-packages -p python3 타겟폴더 이름 # Python3 기준&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;가상환경 실행&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;$ source ~/tensorflow/bin/activate&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;텐서플로 설치&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;$ pip3 install --upgrade tensorflow&lt;/code&gt; # CPU 버전, GPU 버전은 tensorflow-gpu로 설치&lt;/li&gt;
  &lt;li&gt;데모파일 작성 (&lt;code class=&quot;highlighter-rouge&quot;&gt;demo.py&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tensorflow&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tf&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;node1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;constant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;node2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;constant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;4.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# also tf.float32 implicitly&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;실행 결과&lt;/strong&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;Tensor(&quot;Const:0&quot;, shape=(), dtype=float32) Tensor(&quot;Const_1:0&quot;, shape=(), dtype=float32)&lt;/code&gt;&lt;br /&gt;
위와 같이 출력되면 환경설정은 완료&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tensorflow.org/install/install_mac&quot;&gt;공식 설치문서&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;주요개념&quot;&gt;주요개념&lt;/h1&gt;

&lt;h2 id=&quot;tensor&quot;&gt;Tensor&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3 # a rank 0 tensor; this is a scalar with shape []
[1. ,2., 3.] # a rank 1 tensor; this is a vector with shape [3]
[[1., 2., 3.], [4., 5., 6.]] # a rank 2 tensor; a matrix with shape [2, 3]
[[[1., 2., 3.]], [[7., 8., 9.]]] # a rank 3 tensor with shape [2, 1, 3]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Tensorflow의 기본 자료구조.  &lt;br /&gt;
동적인 크기를 갖는 원시값의 다차원 데이터 배열이며 Tensor의 rank는 차원을 의미한다.&lt;/p&gt;

&lt;h2 id=&quot;computational-graph&quot;&gt;Computational Graph&lt;/h2&gt;
&lt;p&gt;노드 그래프로 배열된 일련의 텐서플로우 오퍼레이션 모음.&lt;br /&gt;
Tensorflow의 코어는 Computational Graph를 생성하고, 실행하는 각각의 부분으로 나뉜다.&lt;br /&gt;
그리하여 데모파일의 실행 결과가 각각의 노드값이 아닌 두개의 텐서가 출력된 것.&lt;/p&gt;

&lt;h3 id=&quot;computational-graph-실행&quot;&gt;Computational Graph 실행&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Session을 생성하고&lt;/li&gt;
  &lt;li&gt;Session.run()을 실행
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sess = tf.Session()
print(sess.run([node1, node2]))
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;실행결과&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2017-06-04 22:24:47.634630: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.
[3.0, 4.0]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;워닝이 뜨기는 했지만 결과값은 제대로 출력되었다.&lt;br /&gt;
구글링해보니 로컬에서 소스코드를 빌드하지 않았을 경우 뜨는 오류라 한다.&lt;br /&gt;
해결방법 : &lt;a href=&quot;http://www.kwangsiklee.com/ko/2017/04/%ED%85%90%EC%84%9C%ED%94%8C%EB%A1%9C%EC%9A%B0-%EA%B2%BD%EA%B3%A0%EB%A9%94%EC%84%B8%EC%A7%80-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0-the-tensorflow-library-wasnt-compiled-to-use-sse3-instructions/&quot;&gt;링크&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;기타-더-읽어볼거리&quot;&gt;기타 더 읽어볼거리&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://tensorflowkorea.gitbooks.io/tensorflow-kr/content/g3doc/get_started/basic_usage.html&quot;&gt;텐서플로우 문서 한글 번역본&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://www.popit.kr/%ED%85%90%EC%84%9C%ED%94%8C%EB%A1%9C%EC%9A%B0tensorflow-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/&quot;&gt;텐서플로우 시작하기&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://pythonkim.tistory.com/39&quot;&gt;텐서보드 사용법&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;최종목표&quot;&gt;최종목표&lt;/h1&gt;
&lt;p&gt;텐서플로우를 이용한 Android app 작성&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Jekyll 커스텀 플러그인 개발 및 적용, Github 페이지에 적용하기 (2)</title>
   <link href="https://minyoungjung.github.io/"/>
   <updated>2017-06-03T00:00:00+09:00</updated>
   <id>https://minyoungjung.github.io//%ED%99%98%EA%B2%BD%EC%84%A4%EC%A0%95/%EB%B8%94%EB%A1%9C%EA%B7%B8/2017/06/03/jekyll-custom-plugin-develop-and-adopt-to-github-(2)</id>
   <content type="html">&lt;h1 id=&quot;지난-포스팅&quot;&gt;지난 포스팅&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;/환경설정/블로그/2017/06/02/jekyll-custom-plugin-develop-and-adopt-to-github/&quot;&gt;Jekyll 커스텀 플러그인 개발 및 적용, Github 페이지에 적용하기&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;발단&quot;&gt;발단&lt;/h1&gt;
&lt;p&gt;다시 하루가 지나고 Github page에 접속하자, 어제 만든 플러그인이 동작하지 않았다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;total_blogging_date&lt;/code&gt; 태그가 동작하지 않아 하루가 지났음에도 총 일수가 더해지지 않은 것.&lt;br /&gt;
한참 루비코드만 들여다보다 생각해보니, Jekyll 자체가 정적인 페이지를 생성하는데 페이지를 빌드하지 않았는데도 갱신되는게 말이 안되는 상황.&lt;br /&gt;
계속해서 소스를 수정하면서 빌드하다보니, 제대로 동작하는 것으로 오해하게 된 것이었다.&lt;/p&gt;

&lt;h1 id=&quot;해결-방안&quot;&gt;해결 방안&lt;/h1&gt;
&lt;p&gt;총 블로깅 일수를 태그로 받았을때, 현재 날짜와 총 날짜를 계산할 때 사용된 마지막 날짜의 비교가 불가능하다.&lt;br /&gt;
태그에서 받은 총 블로깅 날짜만을 가지고 빌드하지 않은채로 며칠이 지났는지 알 방법이 없고,&lt;br /&gt;
혹여 있다해도 그냥 템플릿에서 가장 오래된 포스팅 날짜와 현재 날짜의 차이를 비교하는 것이 편하다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Calculate total_blogging_date_dynamically&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;date_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;{{ site.posts.last.date }}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 2017-05-31 00:00:00 +0900&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;date_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;86400000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// calc datediff&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#dynamic_day&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;total_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;del&gt;결국 위와 같이 템플릿에서 받아온 날짜를 가지고, 매크로 형태로 JQuery에 적용시킴으로 해결.&lt;/del&gt; &lt;br /&gt;
며칠 후 갑자기 날짜가 맞지않아 생각해보니, 그냥 내림을 해서 계산하면 안된다…&lt;br /&gt;
결국 시간단위를 제외한 Date값을 연산하는 아래와 같은 방법으로 로직 수정하여 해결.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;date_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2017-05-31 00:00:00 +0900&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 2017-05-31 00:00:00 +0900&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setHours&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstday&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;date_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;firstday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setHours&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;86400000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// calc datediff&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#dynamic_day&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;total_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
마찬가지로 며칠째 포스팅을 이어가고 있는지도 마지막 빌드 이후 며칠이 지났는지 알수 없기에,&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;latest_post_date_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;{{ site.posts.first.date }}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;day_passed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;latest_post_date_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;86400000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// if latest posting date passed a day then reset to 0&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;day_passed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#current_date_streak&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;위와 같이 템플릿에서 받아온 값을 마지막 포스팅의 날짜와 현재 날짜가 하루이상 지났을때,&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;current_date_streak&lt;/code&gt; 태그 값을 0으로 덮어씌우도록 수정했다.&lt;/p&gt;

&lt;h1 id=&quot;추가-문제점&quot;&gt;추가 문제점&lt;/h1&gt;
&lt;p&gt;sitemap이 정적페이지로 빌드하다보니, &lt;code class=&quot;highlighter-rouge&quot;&gt;site.url&lt;/code&gt;값이 로컬이 반영된 값인 localhost가 들어가 버린다…&lt;br /&gt;
결국 사이트맵 내의 &lt;code class=&quot;highlighter-rouge&quot;&gt;site.url&lt;/code&gt; 값을 github pages 주소로 하드코딩.&lt;/p&gt;

&lt;h1 id=&quot;마무리&quot;&gt;마무리&lt;/h1&gt;
&lt;p&gt;Github Plugin 코드 및 README를 업데이트 했다. &lt;a href=&quot;https://github.com/MinyoungJung/jekyll-plugin-blogStreak&quot;&gt;링크&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Jekyll 커스텀 플러그인 개발 및 적용, Github 페이지에 적용하기</title>
   <link href="https://minyoungjung.github.io/"/>
   <updated>2017-06-02T00:00:00+09:00</updated>
   <id>https://minyoungjung.github.io//%ED%99%98%EA%B2%BD%EC%84%A4%EC%A0%95/%EB%B8%94%EB%A1%9C%EA%B7%B8/2017/06/02/jekyll-custom-plugin-develop-and-adopt-to-github</id>
   <content type="html">&lt;h1 id=&quot;발단&quot;&gt;발단&lt;/h1&gt;
&lt;p class=&quot;message&quot;&gt; Jekyll로 구성한 블로그 디자인을 수정하며 조금씩 구색을 맞추기 시작했다.&lt;br /&gt; 
사이트맵을 추가해 구글에서 검색되지 않는 부분도 수정하고, &amp;nbsp;&lt;a href=&quot;http://tech.kakao.com/2016/07/07/tech-blog-story/&quot; target=&quot;_blank&quot;&gt;Kakao Tech 참고자료&lt;/a&gt;&lt;br /&gt;
어날리틱스 &amp;amp; 서치콘솔 연동과 같은 소소한 부분도 처리했다. &lt;br /&gt; 
&quot;블로그 자체에 큰 노력을 들이지 않고 컨텐츠에 집중해 매일 무엇인가 정리해보자&quot;는 취지도 이때까지는&lt;br /&gt; 맞는듯 했다... &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;하지만 데일리 로그라는 명목하에, 블로그 첫 게시일로부터 며칠이 지났고, 며칠째 포스팅을 이어가고 있는지 표시하고 싶다는 생각이 들었다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;커스텀-플러그인-개발&quot;&gt;커스텀 플러그인 개발&lt;/h1&gt;
&lt;p&gt;Jekyll 환경변수, Liquid 템플릿 태그 등을 확인해 보았는데 마땅한 방법이 보이지 않았다.&lt;br /&gt;
어딘가에 있을법한 기능인데도 찾기가 쉽지 않아 기존 플러그인 몇 개의 소스를 들여다 보고 자체 제작하기로 했다.&lt;/p&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Jekyll&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RenderTotalBloggingDate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Liquid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Tag&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;registers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strptime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;docs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'%Y-%m-%d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'%Y-%m-%d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;liquid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;register_tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'total_blogging_date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Jekyll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RenderTotalBloggingDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;루비는 예전에 간단히 레일스를 만져볼때 빼고는 다뤄본적이 없어, 라이브러리나 문법등이 기억이 나지 않았다.&lt;br /&gt;
다행히 플러그인 구조가 간단하기에 큰 문제가 되지는 않았다.&lt;/p&gt;

&lt;h2 id=&quot;플러그인-구조&quot;&gt;플러그인 구조&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Jekyll 모듈에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Liquid::Tag&lt;/code&gt;를 상속받은 클래스를 생성한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;render(context)&lt;/code&gt;함수를 오버라이딩 한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;liquid::Template.register_tag('태그이름', Jekyll:: 태그 클래스 이름)&lt;/code&gt;과 같이 태그를 등록한다.&lt;/li&gt;
  &lt;li&gt;등록된 태그는 템플릿에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;태그이름&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;과 같이 사용가능하다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;플러그인-적용&quot;&gt;플러그인 적용&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;블로그 경로에 &lt;code class=&quot;highlighter-rouge&quot;&gt;_plugins&lt;/code&gt; 폴더를 생성한다.&lt;/li&gt;
  &lt;li&gt;원하는 곳에 태그를 넣는다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;github-page로-적용&quot;&gt;Github page로 적용?&lt;/h1&gt;
&lt;p class=&quot;message&quot;&gt; 로컬에서 잘 동작하는 것을 확인하고, Github로 페이지를 푸쉬했다.&lt;br /&gt;그리고... &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/post_assets/2017-06-02/mail_from_github.png&quot; alt=&quot;깃허브에서 온 메일&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;color:red; font-weight:bold;&quot;&gt;빌드가 실패했다!&lt;/p&gt;

&lt;h2 id=&quot;원인-분석&quot;&gt;원인 분석&lt;/h2&gt;
&lt;p&gt;여전히 Tag가 인식되지 않는단다. 이유를 확인해보니, 보안상의 이유로 &lt;a href=&quot;https://github.com/github/pages-gem&quot;&gt;github/pages-gem&lt;/a&gt;을&lt;br /&gt;
제외한 커스톰 plugin을 Github에서는 공식 사용할 수 없게 되어있다.&lt;/p&gt;

&lt;h2 id=&quot;해결방안&quot;&gt;해결방안&lt;/h2&gt;
&lt;p&gt;다행히 Workaround가 존재한다. 자세한 것은 다른 분의 링크로 대체.
&lt;a href=&quot;http://gumpcha.github.io/blog/github-pages-with-jekyll-custom-plugin/&quot; target=&quot;_blank&quot;&gt;링크&lt;/a&gt;
간단히 요약하면,&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Jekyll이 생성하는 정적 페이지인 &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt;폴더를 Github에 Master 브랜치로 등록한다.&lt;/li&gt;
  &lt;li&gt;소스코드를 담은 기존 Master 브랜치는 Source 브랜치로 따로 딴 후, Source에서 동일하게 포스팅을 작성한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Jekyll serve&lt;/code&gt;를 실행하면 템플릿 태그는 전부 정적 리소스로 변경된다.&lt;/li&gt;
  &lt;li&gt;정적 리소스만 포함한 마스터 브랜치(&lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt; 폴더)와 Source 브랜치를 모두 Github에 푸시한다.&lt;/li&gt;
  &lt;li&gt;마스터 브랜치를 삭제한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;문제점&quot;&gt;문제점&lt;/h2&gt;
&lt;p&gt;매번 포스팅 할때마다 브랜치를 새로 생성하고 Source에서 작업하고 다시 Master를 삭제하는 방법을 사용해야 한다.&lt;br /&gt;
다행히 쉘 스크립트를 이용해서 간편하게 해결 가능하다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;publish.sh&lt;/code&gt;를 다음과 같이 블로그 폴더에 생성하고,&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

git checkout &lt;span class=&quot;nb&quot;&gt;source
&lt;/span&gt;git branch -D master
git checkout -b master 
git filter-branch --subdirectory-filter _site/ -f
git push --all
git checkout &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;필요한 일련의 명령들을 하나로 모은다.&lt;/p&gt;

&lt;p&gt;그 이후 블로그를 작성하는 방법은 아래와 같다.&lt;/p&gt;

&lt;h1 id=&quot;블로그-퍼블리싱&quot;&gt;블로그 퍼블리싱&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; 폴더에 마크다운 작성&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(source) $ jekyll serve&lt;/code&gt; 로 정적 사이트 생성&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(source) $ git add .&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(source) $ git commit -m 'Commit message'&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(source) $ ./publish.sh&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;plugin-링크&quot;&gt;Plugin 링크&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/MinyoungJung/jekyll-plugin-blogStreak&quot;&gt;깃허브&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;사용법&quot;&gt;사용법&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;블로그 폴더 안에 &lt;code class=&quot;highlighter-rouge&quot;&gt;_plugins&lt;/code&gt; 폴더를 생성한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;blog_streak.rb&lt;/code&gt; 파일을 &lt;code class=&quot;highlighter-rouge&quot;&gt;_plugins&lt;/code&gt; 폴더에 넣는다.&lt;/li&gt;
  &lt;li&gt;템플릿에 태그를 넣는다. &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;태그이름&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;태그-종류&quot;&gt;태그 종류&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;del&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;total_blogging_date&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/del&gt;&lt;br /&gt;
&lt;del&gt;첫 포스팅부터 현재까지 지난 일 수&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;current_date_streak&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;br /&gt;
현재 연속 포스팅 일 수 (포스팅을 하지 않고 하루를 넘기면 초기화 됨)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;longest_date_streak&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;br /&gt;
최장 연속 포스팅 일 수 (첫 포스팅부터 현재까지 최장 연속 포스팅 일 수)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;/환경설정/블로그/2017/06/03/jekyll-custom-plugin-develop-and-adopt-to-github-(2)/&quot;&gt;Jekyll 커스텀 플러그인 개발 및 적용, Github 페이지에 적용하기(2)&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Mac Finder에서 Tag를 이용한 파일 분류, Mac 키보드의 특수문자 입력하기</title>
   <link href="https://minyoungjung.github.io/"/>
   <updated>2017-06-01T00:00:00+09:00</updated>
   <id>https://minyoungjung.github.io//mac%20%EC%82%AC%EC%9A%A9%ED%8C%81/2017/06/01/mac-finder-tagging-special-character</id>
   <content type="html">&lt;h2 id=&quot;mac-finder에서-tag를-이용해-파일-분류하기&quot;&gt;Mac Finder에서 Tag를 이용해 파일 분류하기&lt;/h2&gt;
&lt;p&gt;Jekyll을 이용해 포스팅을 하려니 포스팅 폴더 접근이 귀찮았다.&lt;br /&gt;
보통 이런 경우 Finder의 즐겨찾기에 작업 폴더를 추가하여 사용하는데, &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; 폴더의 언더바가 마음에 거슬려 태그를 이용해 정리하기로 했다.&lt;/p&gt;

&lt;h3 id=&quot;tag-이용방법&quot;&gt;Tag 이용방법&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Finder를 연다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;⌘&lt;/code&gt;(커맨드)+&lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt;(콤마)를 눌러 Finder 환경 설정으로 들어간다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;태그&lt;/code&gt; 탭에서 Tag 이름 및 색상을 수정한다
&lt;img src=&quot;/post_assets/2017-06-01/finder_settings.png&quot; alt=&quot;태그 수정&quot; /&gt;
    &lt;ul&gt;
      &lt;li&gt;위쪽 목록 영역은 사이드바, 아래쪽 즐겨찾기 태그 부분은 Finder에서 파일을 우클릭 했을때 나타나는 즐겨찾기 메뉴&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Tag를 이용하여 분류한 파일 
&lt;img src=&quot;/post_assets/2017-06-01/finder_sidebar.png&quot; alt=&quot;태그를 이용해 분류&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;mac-키보드의-특수문자등-입력하기&quot;&gt;Mac 키보드의 특수문자(⌘⎋⌥⌃등) 입력하기&lt;/h2&gt;
&lt;p&gt;포스팅을 하다보니 맥 키보드에 존재하는 특수문자를 입력해야 하는 경우가 생긴다.&lt;br /&gt;
한번 설정하면 계속 남아있긴 하지만 설정법 등은 매번 잊어버리고 인터넷에서 다시 찾게되는 경향이 있어 정리했다.&lt;/p&gt;

&lt;h3 id=&quot;특수문자-추가-방법&quot;&gt;특수문자 추가 방법&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;⌘&lt;/code&gt;(커맨드)+&lt;code class=&quot;highlighter-rouge&quot;&gt;⌃&lt;/code&gt;(컨트롤)+&lt;code class=&quot;highlighter-rouge&quot;&gt;⌴&lt;/code&gt;(스페이스)를 눌러 특수문자 입력창을 띄운다.&lt;/li&gt;
  &lt;li&gt;왼쪽 위의 &lt;code class=&quot;highlighter-rouge&quot;&gt;목록 사용자화&lt;/code&gt;를 선택한다.
&lt;img src=&quot;/post_assets/2017-06-01/special character_customize.png&quot; alt=&quot;목록 사용자화&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;목록에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;기술 기호&lt;/code&gt;를 선택하면 특수문자 입력창에 추가된다.
&lt;img src=&quot;/post_assets/2017-06-01/special_character_setting.png&quot; alt=&quot;기술기호 선택&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Jekyll과 Lanyon을 이용한 블로깅 및 테마 편집 방법</title>
   <link href="https://minyoungjung.github.io/"/>
   <updated>2017-05-31T00:00:00+09:00</updated>
   <id>https://minyoungjung.github.io//%ED%99%98%EA%B2%BD%EC%84%A4%EC%A0%95/%EB%B8%94%EB%A1%9C%EA%B7%B8/2017/05/31/lanyon-theme-customize</id>
   <content type="html">&lt;h2 id=&quot;jekyll이란&quot;&gt;Jekyll이란?&lt;/h2&gt;
&lt;p&gt;정적 사이트 생성기.&lt;br /&gt;
간단히 말하면 마크다운 언어&lt;strong&gt;(.md 등)&lt;/strong&gt;로 작성된 글을 알아서 HTML로 변경해준다.&lt;br /&gt;
이러한 방식을 이용하여 포스팅 뿐만 아니라, 페이지 전체를 빌드할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;테마-설정&quot;&gt;테마 설정&lt;/h2&gt;
&lt;p&gt;Jekyll 및 테마를 설치하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Jekyll serve&lt;/code&gt; 명령을 실행하니
&lt;code class=&quot;highlighter-rouge&quot;&gt;Build Warning: Layout 'home' requested in index.md does not exist.&lt;/code&gt;
라는 warning과 함께 빈 화면이 출력되었다.&lt;br /&gt;
이는 Lanyon 테마 설치 이후 &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt;을 생성하는 마크다운인 &lt;code class=&quot;highlighter-rouge&quot;&gt;index.md&lt;/code&gt;에
&lt;code class=&quot;highlighter-rouge&quot;&gt;layout: home&lt;/code&gt;이 설정되어 있으나, home이라는 레이아웃이 존재하지 않기 때문에 일어난다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;해결방법 1 : &lt;code class=&quot;highlighter-rouge&quot;&gt;index.md&lt;/code&gt;를 삭제해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt;이 알아서 처리하게 한다.&lt;/li&gt;
  &lt;li&gt;해결방법 2 : &lt;code class=&quot;highlighter-rouge&quot;&gt;index.md&lt;/code&gt;의 내용을 아래와 같이 바꾼다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_layouts&lt;/code&gt; 폴더에 존재하는 default 레이아웃을 이용하여 포스트의 리스트를 출력하는 예제&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
---
layout: default
title: Home
---
&amp;lt;ul&amp;gt;
    {% for post in site.posts %}
&amp;lt;li&amp;gt;
    &amp;lt;a href=&quot;{{ post.url }}&quot;&amp;gt;{{ post.title }}&amp;lt;/a&amp;gt;
&amp;lt;/li&amp;gt;
    {% endfor %}
&amp;lt;/ul&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;테마-사이드바-설정&quot;&gt;테마 사이드바 설정&lt;/h2&gt;

&lt;h3 id=&quot;사이드바-추가&quot;&gt;사이드바 추가&lt;/h3&gt;
&lt;p&gt;마크다운 작성 시 파일 상단 머릿말을 다음과 같이 작성한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: page
title: About
---
페이지 내용
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;HTML 빌드 시 사이드바에 자동으로 추가되며 주소는 &lt;code class=&quot;highlighter-rouge&quot;&gt;base_url/title&lt;/code&gt;가 된다.&lt;/p&gt;

&lt;h3 id=&quot;기존-사이드바-수정&quot;&gt;기존 사이드바 수정&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_includes&lt;/code&gt; 폴더 하위의 &lt;code class=&quot;highlighter-rouge&quot;&gt;sidebar.html&lt;/code&gt;을 수정한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;포스트-작성&quot;&gt;포스트 작성&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; 폴더 안에 &lt;code class=&quot;highlighter-rouge&quot;&gt;년-월-일-제목.md&lt;/code&gt;와 같은 이름으로 마크다운 파일을 생성한다.&lt;/p&gt;

&lt;p&gt;머릿말의 layout을 post로 선택하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;_layouts&lt;/code&gt; 폴더 하위의 &lt;code class=&quot;highlighter-rouge&quot;&gt;post.html&lt;/code&gt;을 이용해 페이지가 생성된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: post
title: Jekyll과 Lanyon을 이용한 블로깅 및 테마 편집 방법
---
이곳에 포스트 내용 작성
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;2017-05-31-lanyon-theme-customize.md&lt;/code&gt;로 생성한 포스트의 주소는&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;base_url/2017/05/31/lanyon-theme-customize/&lt;/code&gt;가 된다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;느낀점&quot;&gt;느낀점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;글 자체를 집중해서 쓰기 좋다.&lt;br /&gt;
보기 좋게 꾸미는대 들어가는 노력이 줄어든다.&lt;br /&gt;
&lt;del&gt;하지만 페이지 자체를 꾸미는데 노력이 들어갈 것 같다는 느낌이 든다…&lt;/del&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Github와 연동 시 시너지가 발생한다.
    &lt;ul&gt;
      &lt;li&gt;Git repository를 이용해 블로그의 버전 관리를 할 수 있다.&lt;/li&gt;
      &lt;li&gt;블로그의 호스팅을 Github에서 제공한다.&lt;/li&gt;
      &lt;li&gt;한번 설정해 놓으면 사이트에 방문할 필요 없이 로컬에서 마크다운을 작성하고 git으로 push하면 된다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;마크다운을 작성하여 페이지를 구성하는 동작 방식이 포스팅뿐만 아니라 페이지 전체에 이용된다는 것이 인상적이다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;레이아웃 및 페이지 수정에 대한 자유도가 높다. (진입장벽이 높다)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;일반인들이 쓰기에는 어려움이 따를 듯하다.
    &lt;ul&gt;
      &lt;li&gt;깃허브 설정까지는 그렇다고 쳐도, 커맨드라인 인터페이스에 익숙한 일반인은 많지 않겠지..&lt;/li&gt;
      &lt;li&gt;페이지 테마와 레이아웃을 수정하는대 템플릿 태그와 html/css에 대한 이해가 어느 정도 필요하다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;전체-소스코드&quot;&gt;전체 소스코드&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/MinyoungJung/minyoungjung.github.io&quot;&gt;Github repository (Link)&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 

</feed>
